[DEFAULT]
modelname = ModelName
workdir = /radarseg
logdir = /radarseg/logs

[COMPUTING]
seed = integer_or_none(min=0, default=42)

[PREPROCESS]
dataset = option('None', 'nuscenes', default='None')

    [[PREPROCESSOR]]

    [[CLASSMATCHING]]
    __many__ = string

[GENERATE]
dataformat = option('None', 'sequence_example', default='None')
__many__ = pass

[MODEL]
input_shape = int_list_or_none(default=None)
batch_size = integer_or_none(min=0, default=None)
input_names = string_list_or_none(default=None)
input_dtypes = string_list_or_none(default=None)
sparse_input = boolean(default=False)
ragged_input = boolean(default=False)
data_format = option('channels_last', 'channels_first', default='channels_last')
dtype = string(default=float)

    [[INPUT]]
    module = option('None', 'layers', 'pointnet', 'pointnet2', 'min_max_scaling', 'kpfcnn', 'kplstm', default='None')
    layer = string(default=None)

    [[ENCODER]]
    module = option('None', 'layers', 'pointnet', 'pointnet2', 'kpfcnn', 'kplstm', default='None')
    layer = string(default=None)

    [[BRIDGE]]
    module = option('None', 'layers', 'pointnet', 'pointnet2', 'kpfcnn', 'lstm_1d', 'conv_lstm_1d', 'kplstm', default='None')
    layer = string(default=None)

    [[DECODER]]
    module = option('None', 'layers', 'pointnet', 'pointnet2', 'kpfcnn', 'kplstm', default='None')
    layer = string(default=None)

    [[OUTPUT]]
    module = option('None', 'layers', 'pointnet', 'pointnet2', 'kpfcnn', 'kplstm', default='None')
    layer = string(default=None)

[TRAIN]
saved_model = string(default='None')
epochs = integer(min=0, default=1)
verbose = integer(min=0, max=2, default=1)
validation_freq = integer(min=0, default=1)
max_queue_size = integer(min=1, default=10)
workers = integer(min=0, default=1)
use_multiprocessing = boolean(default=False)
shuffle = boolean(default=True)
class_weight = float_list_or_none(default=None)
sample_weight = float_list_or_none(default=None)
initial_epoch = integer(min=0, default=0)
steps_per_epoch = integer_or_none(min=0, default=None)
validation_steps = integer_or_none(min=0, default=None)
loss_weights = float_list_or_none(default=None)
sample_weight_mode = string_list_or_none(default=None)
weighted_metrics = string_list_or_none(default=None)

    [[OPTIMIZER]]
    __many__ = dict()

    [[LOSSES]]
    __many__ = dict()

    [[METRICS]]
    __many__ = dict()

    [[CALLBACKS]]
    __many__ = dict()
