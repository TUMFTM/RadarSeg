[DEFAULT]
    modelname = KPConv
    logdir = /data/logs/

[COMPUTING]

[PREPROCESS]
    dataset = nuscenes
    [[PREPROCESSOR]]
        version = v1.0-trainval
        point_major = False
        remove_background = False
        invalid_states = None
        dynprop_states = "[0, 1, 2, 3, 4, 5, 6, 7]"
        ambig_states = None
        annotation_attributes = "['vehicle.moving', 'vehicle.stopped', 'vehicle.parked', 'cycle.with_rider', 'cycle.without_rider', 'pedestrian.sitting_lying_down', 'pedestrian.standing', 'pedestrian.moving']"
        locations = "['boston-seaport', 'singapore-queenstown', 'singapore-onenorth', 'singapore-hollandvillage']"
        sensor_names = "['RADAR_FRONT', 'RADAR_FRONT_LEFT', 'RADAR_FRONT_RIGHT', 'RADAR_BACK_LEFT', 'RADAR_BACK_RIGHT']"
        keep_channels = "['x', 'y', 'z', 'rcs', 'vx_comp', 'vy_comp']"
        wlh_offset = 0.5
        use_multisweep = True
        nsweeps = 3
        name = None
        channel_boundaries = {}
        channel_target_values = {}
        attribut_matching_dict = {'vehicle.moving': 'vehicle'}
    [[CLASSMATCHING]]
        human.pedestrian.adult = None
        human.pedestrian.child = None
        human.pedestrian.wheelchair = None
        human.pedestrian.stroller = None
        human.pedestrian.personal_mobility = None
        human.pedestrian.police_officer = None
        human.pedestrian.construction_worker = None
        animal = None
        vehicle.car = None
        vehicle.motorcycle = None
        vehicle.bicycle = None
        vehicle.bus.bendy = None
        vehicle.bus.rigid = None
        vehicle.truck = None
        vehicle.construction = None
        vehicle.emergency.ambulance = None
        vehicle.emergency.police = None
        vehicle.trailer = None
        movable_object.barrier = None
        movable_object.trafficcone = None
        movable_object.pushable_pullable = None
        movable_object.debris = None
        static_object.bicycle_rack = None

[GENERATE]
    dataformat = sequence_example
    batch_size = 8
    feature_names = "['x', 'y', 'z','rcs', 'vx_comp', 'vy_comp', 'label']"
    feature_types = "['float', 'float', 'float', 'float', 'float', 'float', 'int']"
    number_of_classes = 2
    labels = True
    shuffle = True
    buffer_size = -1
    seed = 42
    cache = True
    one_hot = True
    context_names = []
    context_types = []
    label_major = False
    dense = True

[MODEL]
    input_shape = "[None, None]"
    input_names = "['x', 'y', 'z', 'rcs', 'vx_comp', 'vy_comp']"
    input_dtypes = "['float', 'float', 'float', 'float', 'float', 'float']"
    sparse_input = False
    ragged_input = False
    batch_size = None
    data_format = channels_last
    dtype = float

    [[INPUT]]
	module = min_max_scaling
	layer = MinMaxScaling
    minimum = "[-250.0, -250.0, 0.0, -64.0, -128.0, -64.0]"
    maximum = "[250.0, 250.0, 1.0, 64.0, 128.0, 64.0]"
    data_format = channels_last
    name = None

    [[ENCODER]]
	module = kpfcnn
	layer = Encoder
        resnet = '''[
        '{\'npoint\': 512, \'activation\': \'relu\', \'unary\': "{\'filters\': 16, \'bn\': False}", \'kpconv\': "{\'filters\': 16, \'k_points\': 9, \'nsample\': 16, \'radius\': 0.016, \'activation\': \'relu\', \'kp_extend\': 0.016, \'bn\': False, \'dropout_rate\': 0.2}", \'unary2\': "{\'filters\': 32, \'bn\': False}"}', 
        '{\'npoint\': 128, \'activation\': \'relu\', \'unary\': "{\'filters\': 32, \'bn\': False}", \'kpconv\': "{\'filters\': 32, \'k_points\': 9, \'nsample\': 8, \'radius\': 0.032, \'activation\': \'relu\', \'kp_extend\': 0.032, \'bn\': False, \'dropout_rate\': 0.2}", \'unary2\': "{\'filters\': 64, \'bn\': False}"}' 
       ]'''
        data_format = channels_last
        name = None
    [[BRIDGE]]
    module = None
    layer = None

    [[DECODER]]
    module = pointnet2
    layer = Decoder
    fp = '''[
        "{'mlp': [{'filters': 128, 'activation': 'relu', 'bn': False, 'use_bias': False}, {'filters': 64, 'activation': 'relu', 'bn': False, 'use_bias': False}]}", 
        "{'mlp': [{'filters': 64, 'activation': 'relu', 'bn': False, 'use_bias': False}, {'filters': 64, 'activation': 'relu', 'bn': False, 'use_bias': False}, {'filters': 64, 'activation': 'relu', 'bn': False, 'use_bias': False}]}"
        ]'''
    [[OUTPUT]]
	module = pointnet2
	layer = OutputModule
    num_classes = 2
    mlp = '''[
        "{'filters': 32, 'activation': 'relu', 'bn': False, 'use_bias': False, 'kernel_size': '[1, 1]', 'strides': '[1, 1]', 'padding': 'valid', 'data_format': 'channels_last', 'kernel_initializer': 'glorot_uniform', 'bias_initializer': 'zeros', 'kernel_regularizer': None, 'bias_regularizer': None, 'momentum': 0.9, 'epsilon': 0.001, 'center': True, 'scale': True, 'beta_initializer': 'zeros', 'gamma_initializer': 'ones', 'moving_mean_initializer': 'zeros', 'moving_variance_initializer': 'ones', 'beta_regularizer': None, 'gamma_regularizer': None, 'name': None}", 
        "{'filters': 16, 'activation': 'relu', 'bn': False, 'use_bias': False}"
        ]'''
    dropout = '''[
        "{'rate': 0.5, 'noise_shape': None, 'seed': 42}", 
        "{'rate': 0.5, 'noise_shape': None, 'seed': 42}"
	]'''
    out_activation = softmax
    out_use_bias = False
    out_kernel_initializer = glorot_uniform
    out_bias_initializer = zeros
    out_kernel_regularizer = None
    out_bias_regularizer = None
    data_format = channels_last
    name = None

[TRAIN]
    epochs = 400
    loss_weights = [1.3471689202835773]
    saved_model = None
    verbose = 1
    validation_freq = 1
    max_queue_size = 10
    workers = 1
    use_multiprocessing = False
    shuffle = True
    class_weight = None
    sample_weight = None
    initial_epoch = 0
    steps_per_epoch = None
    validation_steps = None
    sample_weight_mode = None
    weighted_metrics = None
    [[OPTIMIZER]]
        Adam = "{'learning_rate': 0.01, 'beta_1': 0.9, 'beta_2': 0.999, 'epsilon': 1e-07, 'amsgrad': False, 'name': 'Adam'}"
    [[LOSSES]]
        Custom>CategoricalFocalCrossentropy = "{'alpha': '[0.75, 0.6]', 'class_weight': '[0.52165209, 12.04623029]', 'from_logits': False, 'gamma': 2.0, 'reduction': 'auto', 'name': None}"
    [[METRICS]]
        CategoricalAccuracy = {'name': 'categorical_accuracy'}
        Custom>F1Score = "{'num_classes': 2, 'average': 'macro', 'top_k': 1, 'thresholds': None, 'class_id': None, 'name': None}"
        Custom>ConfusionMatrix = "{'num_classes': 2, 'name': None}"
    [[CALLBACKS]]
        LearningRateScheduler = '''{'verbose': 0, 'schedule': '{\'class_name\': \'Custom>ExponentialDecayClipping\', \'config\': "{\'initial_learning_rate\': 0.001, \'min_learning_rate\': 1e-05, \'decay_steps\': 38, \'decay_rate\': 0.95, \'staircase\': True}"}'}'''
        ConfusionMatrixLogger = {}
        TensorBoard = "{'histogram_freq': 1, 'write_graph': True}"
        CSVLogger = "{}"
        ModelCheckpoint = "{ 'save_weights_only': True, 'monitor': 'val_loss', 'verbose': 0, 'save_best_only': False, 'mode': 'auto'}"
